import { IPoint } from './types';

/**
 * Интерфейс для локаций уровня
 * @type
 * @param {string[]} map - описание карты, где
 *                      1) "0" - пустой (неосязаемый) блок,
 *                      2) "1" - осязаемый блок,
 *                      3) "+"/"-"" - переход на уровень вперед/назад
 *                      4) строчная буква (lower-case letter) - нажимная плиат; блок, который, если на него приземлиться,
 *                          меняет состояние ключа с тем же значением/цветом, внутри активированного блока появляется квадрат другого цвета
 *                      5) прописная буква (upper-case letter) - переключающийся блок, который становится неосязаемым,
 *                          если активирован ключ с данным цветом/значением и, наоборот, становятся осязаемым, если ключ деактивирован
 *
 * @param {IPoint} entryPointA - точка появления шарика при переходе с предыдущего по номеру уровня
 * @param {IPoint} entryPointB - точка появления шарика при переходе со следующего по номеру уровня
 */

type TGameLvl = {
    map: string[];
    entryPointA: IPoint;
    entryPointB: IPoint;
};

export const LVLs: TGameLvl[] = [
    {
        entryPointA: { x: 3, y: 8 },
        entryPointB: { x: 27, y: 8 },
        map: [
            '111111111111111111111111111111',
            '100000000000000000000000AA0001',
            '100000000000000000000000AA0001',
            '100000000000000000000000AA0001',
            '100000000000000000000000AA0001',
            '100000000000000000000000AA0001',
            '100000000000000000000000AA0001',
            '100000000000000000000000AA0001',
            '100000000000000000000000AA00+1',
            '1111111ccc1aaaa111bbbb11111111',
        ],
    },

    {
        entryPointA: { x: 3, y: 2 },
        entryPointB: { x: 28, y: 2 },
        map: [
            '1111111111111111111111111111111',
            '10000000000000000000000C0000001',
            '1-000000000000000000000C00000+1',
            '11111111111111BBB11111111111111',
            '1111111111111100011111111111111',
            '1111111111111100011111111111111',
            '1111111111111100011111111111111',
            '1111111111111100011111111111111',
            '1-000000000000000C00000000000-1',
            '1111111111111111111111111111111',
        ],
    },

    {
        entryPointA: { x: 2, y: 2 },
        entryPointB: { x: 27, y: 8 },
        map: [
            '111111111111111111111111111111',
            '100000000000000000000111111111',
            '1-0000000000000000000001111111',
            '111111110000000000000000011111',
            '111111111ccc100000000000000111',
            '111111111111111100000000000011',
            '111111111111111111100000000001',
            '111111111111111111111110000001',
            '1111111111111111111111110000+1',
            '111111111111111111111111111111',
        ],
    },

    {
        entryPointA: { x: 44, y: 8 },
        entryPointB: { x: 2, y: 1 },
        map: [
            '1111111111111111111111111111111111111111111111',
            '1000000000000000000000000000010000000000000001',
            '1111100111000000000000000000000000000000000001',
            '10000000000000000000000000000000000000000000-1',
            '11111111AAA0000000000001111111000001111bbbb111',
            '1000000000AAA000000000000001110000000000000001',
            '1000000000001111110000000001111111000000000111',
            '100000000111111111CC00000001110011110011100001',
            '100000000000000000CCC0000000000000000000000001',
            '1111aaa1111111111111111ccc11111111111111111111',
        ],
    },
];
